{
	"info": {
		"_postman_id": "6a5dfdc1-b5f0-41cb-b011-9f6691c69dac",
		"name": "uek223-backend-2",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "26892591"
	},
	"item": [
		{
			"name": "admin",
			"item": [
				{
					"name": "public",
					"item": [
						{
							"name": "LoginAdmin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Set login in admin\r",
											"pm.test(\"Your test name\", function () {\r",
											"    var auth = pm.response.headers.get(\"Authorization\");\r",
											"    console.log(auth);\r",
											"    pm.collectionVariables.set(\"authtokenadmin\", auth);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Person is Admin\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.email).to.eql(\"admin@example.com\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"admin@example.com\",\r\n    \"password\": \"1234\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:8080/user/login"
							},
							"response": []
						}
					]
				},
				{
					"name": "private",
					"item": [
						{
							"name": "GetAllBlogPosts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Number of recived Objekts higher then 0' ,function () {\r",
											"    const data = pm.response.json()\r",
											"    pm.expect(data.length).to.be.greaterThan(0);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:8080/blogs/"
							},
							"response": []
						},
						{
							"name": "GetSingleBlogPost",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"/* checks if its object */\r",
											"pm.test('1 Object received', function () {\r",
											"    const data = pm.response.json();\r",
											"    pm.expect(data).to.be.an('object');\r",
											"});\r",
											"\r",
											"/* checks the title name */\r",
											"pm.test(\"Check title\", function () {\r",
											"    const responseJson = pm.response.json();\r",
											"    pm.expect(responseJson.title).to.eql(\"test 05 - admin -- does postman work??\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:8080/blogs/65636224-1cf5-493c-ad3a-844ca474735f"
							},
							"response": []
						},
						{
							"name": "CreateBlogPost",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body contains correct and the expected data\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.not.be.undefined;\r",
											"    pm.expect(jsonData.title).to.equal(\"test 05 - admin -- does postman work??\");\r",
											"    pm.expect(jsonData.text).to.equal(\"tbd -- testing\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"test 05 - admin -- does postman work??\",\r\n    \"text\": \"tbd -- testing\",\r\n    \"categories\": [\r\n        {\r\n            \"id\": \"efe34204-4d76-11ee-be56-0242ac120002\",\r\n            \"name\": \"Disney\"\r\n        }\r\n    ],\r\n    \"user\": {\r\n        \"id\": \"0d8fa44c-54fd-4cd0-ace9-2a7da57992de\",\r\n        \"firstName\": \"Tyler\",\r\n        \"lastName\": \"Durden\",\r\n        \"email\": \"user@example.com\",\r\n        \"password\": \"$2a$10$TM3PAYG3b.H98cbRrHqWa.BM7YyCqV92e/kUTBfj85AjayxGZU7d6\",\r\n        \"roles\": [\r\n            {\r\n                \"id\": \"c6aee32d-8c35-4481-8b3e-a876a39b0c02\",\r\n                \"name\": \"USER\",\r\n                \"authorities\": [\r\n                    {\r\n                        \"id\": \"60929ffe-4e3f-11ee-be56-0242ac120002\",\r\n                        \"name\": \"BLOG_CREATE\"\r\n                    },\r\n                    {\r\n                        \"id\": \"4a48005e-4e3f-11ee-be56-0242ac120002\",\r\n                        \"name\": \"BLOG_MODIFY\"\r\n                    },\r\n                    {\r\n                        \"id\": \"21c942db-a275-43f8-bdd6-d048c21bf5ab\",\r\n                        \"name\": \"USER_DELETE\"\r\n                    },\r\n                    {\r\n                        \"id\": \"3debf3a6-4e3f-11ee-be56-0242ac120002\",\r\n                        \"name\": \"BLOG_READ\"\r\n                    },\r\n                    {\r\n                        \"id\": \"52d4a54c-4e3f-11ee-be56-0242ac120002\",\r\n                        \"name\": \"BLOG_DELETE\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": \"d29e709c-0ff1-4f4c-a7ef-09f656c390f1\",\r\n                \"name\": \"DEFAULT\",\r\n                \"authorities\": [\r\n                    {\r\n                        \"id\": \"2ebf301e-6c61-4076-98e3-2a38b31daf86\",\r\n                        \"name\": \"DEFAULT\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:8080/blogs/"
							},
							"response": []
						},
						{
							"name": "PutABlogPost",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Testing if the Header has the correct Response\r",
											"pm.test(\"Content-Type is JSON\", function () {\r",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
											"});\r",
											"\r",
											"// Check if the response contains an error status code (example: 4xx or 5xx)\r",
											"pm.test('Error Handling for no ID received', function () {\r",
											"    const responseData = pm.response.json();\r",
											"    if (pm.response.code >= 400) {\r",
											"        pm.expect(responseData.error).to.exist; \r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"Backend Test: Cinderella\", \r\n    \"text\": \"Testing if Put works in Backend\", \r\n    \"user_id\": \"0d8fa44c-54fd-4cd0-ace9-2a7da57992de\",\r\n    \"categories\": [\r\n        {\r\n            \"id\": \"efe34204-4d76-11ee-be56-0242ac120002\",\r\n            \"name\": \"Disney\"\r\n        }\r\n    ],\r\n    \"user\": {\r\n        \"id\": \"0d8fa44c-54fd-4cd0-ace9-2a7da57992de\",\r\n        \"firstName\": \"Tyler\",\r\n        \"lastName\": \"Durden\",\r\n        \"email\": \"user@example.com\",\r\n        \"password\": \"$2a$10$TM3PAYG3b.H98cbRrHqWa.BM7YyCqV92e/kUTBfj85AjayxGZU7d6\",\r\n        \"roles\": [\r\n            {\r\n                \"id\": \"c6aee32d-8c35-4481-8b3e-a876a39b0c02\",\r\n                \"name\": \"USER\",\r\n                \"authorities\": [\r\n                    {\r\n                        \"id\": \"52d4a54c-4e3f-11ee-be56-0242ac120002\",\r\n                        \"name\": \"BLOG_DELETE\"\r\n                    },\r\n                    {\r\n                        \"id\": \"4a48005e-4e3f-11ee-be56-0242ac120002\",\r\n                        \"name\": \"BLOG_MODIFY\"\r\n                    },\r\n                    {\r\n                        \"id\": \"3debf3a6-4e3f-11ee-be56-0242ac120002\",\r\n                        \"name\": \"BLOG_READ\"\r\n                    },\r\n                    {\r\n                        \"id\": \"21c942db-a275-43f8-bdd6-d048c21bf5ab\",\r\n                        \"name\": \"USER_DELETE\"\r\n                    },\r\n                    {\r\n                        \"id\": \"60929ffe-4e3f-11ee-be56-0242ac120002\",\r\n                        \"name\": \"BLOG_CREATE\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": \"d29e709c-0ff1-4f4c-a7ef-09f656c390f1\",\r\n                \"name\": \"DEFAULT\",\r\n                \"authorities\": [\r\n                    {\r\n                        \"id\": \"2ebf301e-6c61-4076-98e3-2a38b31daf86\",\r\n                        \"name\": \"DEFAULT\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:8080/blogs/efe33f34-4d76-11ee-be56-0242ac120002"
							},
							"response": []
						},
						{
							"name": "DeleteABlogPost",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//You can make a GET request to the resource that was deleted to ensure it no longer exists.\r",
											"pm.test(\"Resource has been deleted\", function () {\r",
											"    pm.sendRequest({\r",
											"        url: \"http://localhost:8080/blogs/ecdcca03-fcdb-4f52-af1d-4698c266d550\",\r",
											"        method: \"GET\"\r",
											"    }, function (err, response) {\r",
											"        pm.expect(response.code).to.equal(404); // Assuming a 404 status code when the resource doesn't exist\r",
											"    });\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": "http://localhost:8080/blogs/ecdcca03-fcdb-4f52-af1d-4698c266d550"
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": {
					"token": "{{authtokenadmin}}"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "private",
					"item": [
						{
							"name": "LoginUser",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Set login in admin\r",
											"pm.test(\"Your test name\", function () {\r",
											"    var auth = pm.response.headers.get(\"Authorization\");\r",
											"    console.log(auth);\r",
											"    pm.collectionVariables.set(\"authtokenuser\", auth);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Person is a normal User\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.email).to.eql(\"user@example.com\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"user@example.com\",\r\n    \"password\": \"1234\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:8080/user/login"
							},
							"response": []
						}
					]
				},
				{
					"name": "private",
					"item": [
						{
							"name": "GetAllBlogPosts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Number of recived Objekts higher then 0' ,function () {\r",
											"    const data = pm.response.json()\r",
											"    pm.expect(data.length).to.be.greaterThan(0);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:8080/blogs/"
							},
							"response": []
						},
						{
							"name": "GetSingleBlogPost",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"/* checks if its object */\r",
											"pm.test('1 Object received', function () {\r",
											"    const data = pm.response.json();\r",
											"    pm.expect(data).to.be.an('object');\r",
											"});\r",
											"\r",
											"/* checks the title name */\r",
											"pm.test(\"Check title\", function () {\r",
											"    const responseJson = pm.response.json();\r",
											"    pm.expect(responseJson.title).to.eql(\"Backend Test\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:8080/blogs/f51b422d-9a72-4ff0-96d6-0805c849aa4a"
							},
							"response": []
						},
						{
							"name": "CreateBlogPost",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body contains correct and the expected data\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.not.be.undefined;\r",
											"    pm.expect(jsonData.title).to.equal(\"testing user\");\r",
											"    pm.expect(jsonData.text).to.equal(\"tbd -- postman creating post by user\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"testing user\",\r\n    \"text\": \"tbd -- postman creating post by user\",\r\n    \"categories\": [\r\n        {\r\n            \"id\": \"efe34204-4d76-11ee-be56-0242ac120002\",\r\n            \"name\": \"Disney\"\r\n        }\r\n    ],\r\n    \"user\": {\r\n        \"id\": \"0d8fa44c-54fd-4cd0-ace9-2a7da57992de\",\r\n        \"firstName\": \"Tyler\",\r\n        \"lastName\": \"Durden\",\r\n        \"email\": \"user@example.com\",\r\n        \"password\": \"$2a$10$TM3PAYG3b.H98cbRrHqWa.BM7YyCqV92e/kUTBfj85AjayxGZU7d6\",\r\n        \"roles\": [\r\n            {\r\n                \"id\": \"c6aee32d-8c35-4481-8b3e-a876a39b0c02\",\r\n                \"name\": \"USER\",\r\n                \"authorities\": [\r\n                    {\r\n                        \"id\": \"60929ffe-4e3f-11ee-be56-0242ac120002\",\r\n                        \"name\": \"BLOG_CREATE\"\r\n                    },\r\n                    {\r\n                        \"id\": \"4a48005e-4e3f-11ee-be56-0242ac120002\",\r\n                        \"name\": \"BLOG_MODIFY\"\r\n                    },\r\n                    {\r\n                        \"id\": \"21c942db-a275-43f8-bdd6-d048c21bf5ab\",\r\n                        \"name\": \"USER_DELETE\"\r\n                    },\r\n                    {\r\n                        \"id\": \"3debf3a6-4e3f-11ee-be56-0242ac120002\",\r\n                        \"name\": \"BLOG_READ\"\r\n                    },\r\n                    {\r\n                        \"id\": \"52d4a54c-4e3f-11ee-be56-0242ac120002\",\r\n                        \"name\": \"BLOG_DELETE\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": \"d29e709c-0ff1-4f4c-a7ef-09f656c390f1\",\r\n                \"name\": \"DEFAULT\",\r\n                \"authorities\": [\r\n                    {\r\n                        \"id\": \"2ebf301e-6c61-4076-98e3-2a38b31daf86\",\r\n                        \"name\": \"DEFAULT\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:8080/blogs/"
							},
							"response": []
						},
						{
							"name": "PutABlogPost",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Testing if the Header has the correct Response\r",
											"pm.test(\"Content-Type is JSON\", function () {\r",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
											"});\r",
											"\r",
											"// Check if the response contains an error status code (example: 4xx or 5xx)\r",
											"pm.test('Error Handling for no ID received', function () {\r",
											"    const responseData = pm.response.json();\r",
											"    if (pm.response.code >= 400) {\r",
											"        pm.expect(responseData.error).to.exist; \r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"testing user\",\r\n    \"text\": \"tbd -- postman updating post by user\",\r\n    \"categories\": [\r\n        {\r\n            \"id\": \"efe34204-4d76-11ee-be56-0242ac120002\",\r\n            \"name\": \"Disney\"\r\n        }\r\n    ],\r\n    \"user\": {\r\n        \"id\": \"0d8fa44c-54fd-4cd0-ace9-2a7da57992de\",\r\n        \"firstName\": \"Tyler\",\r\n        \"lastName\": \"Durden\",\r\n        \"email\": \"user@example.com\",\r\n        \"password\": \"$2a$10$TM3PAYG3b.H98cbRrHqWa.BM7YyCqV92e/kUTBfj85AjayxGZU7d6\",\r\n        \"roles\": [\r\n            {\r\n                \"id\": \"c6aee32d-8c35-4481-8b3e-a876a39b0c02\",\r\n                \"name\": \"USER\",\r\n                \"authorities\": [\r\n                    {\r\n                        \"id\": \"60929ffe-4e3f-11ee-be56-0242ac120002\",\r\n                        \"name\": \"BLOG_CREATE\"\r\n                    },\r\n                    {\r\n                        \"id\": \"4a48005e-4e3f-11ee-be56-0242ac120002\",\r\n                        \"name\": \"BLOG_MODIFY\"\r\n                    },\r\n                    {\r\n                        \"id\": \"21c942db-a275-43f8-bdd6-d048c21bf5ab\",\r\n                        \"name\": \"USER_DELETE\"\r\n                    },\r\n                    {\r\n                        \"id\": \"3debf3a6-4e3f-11ee-be56-0242ac120002\",\r\n                        \"name\": \"BLOG_READ\"\r\n                    },\r\n                    {\r\n                        \"id\": \"52d4a54c-4e3f-11ee-be56-0242ac120002\",\r\n                        \"name\": \"BLOG_DELETE\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": \"d29e709c-0ff1-4f4c-a7ef-09f656c390f1\",\r\n                \"name\": \"DEFAULT\",\r\n                \"authorities\": [\r\n                    {\r\n                        \"id\": \"2ebf301e-6c61-4076-98e3-2a38b31daf86\",\r\n                        \"name\": \"DEFAULT\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:8080/blogs/f51b422d-9a72-4ff0-96d6-0805c849aa4a"
							},
							"response": []
						},
						{
							"name": "DeleteABlogPost",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//You can make a GET request to the resource that was deleted to ensure it no longer exists.\r",
											"pm.test(\"Resource has been deleted\", function () {\r",
											"    pm.sendRequest({\r",
											"        url: \"http://localhost:8080/blogs/0f643d8e-3cb0-4aca-b24c-04f3f820416c\",\r",
											"        method: \"GET\"\r",
											"    }, function (err, response) {\r",
											"        pm.expect(response.code).to.equal(404); // Assuming a 404 status code when the resource doesn't exist\r",
											"    });\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": "http://localhost:8080/blogs/0f643d8e-3cb0-4aca-b24c-04f3f820416c"
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": {
					"token": "{{authtokenuser}}"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "authtokenadmin",
			"value": ""
		},
		{
			"key": "authtokenuser",
			"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIwZDhmYTQ0Yy01NGZkLTRjZDAtYWNlOS0yYTdkYTU3OTkyZGUiLCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiREVGQVVMVCJ9XSwiaWF0IjoxNjk0MTc0MDAwLCJleHAiOjE2OTQyNzQwMDAsImlzcyI6InVrMjIzIn0.D9Ix0IEaPCRymHXErbK_kafTkLfRcw1sCMSwHk-Jfvk"
		}
	]
}